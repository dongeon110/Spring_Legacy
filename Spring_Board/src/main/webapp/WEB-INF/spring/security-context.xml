<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <bean id="customAccessDenied" class="board.dongeon.security.CustomAccessDeniedHandler" />
<!--    <bean id="customLoginSuccess" class="board.dongeon.security.CustomLoginSuccessHandler" />-->
<!--    <bean id="customPasswordEncoder" class="board.dongeon.security.CustomNoOpPasswordEncoder" />-->
    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    <bean id="customUserDetailsService" class="board.dongeon.security.CustomUserDetailsService"/>

<!--    <security:http auto-config="true" use-expressions="true">-->
    <security:http>
        <security:intercept-url pattern="/auth/all" access="permitAll" />
        <security:intercept-url pattern="/auth/member" access="hasRole('ROLE_MEMBER')"/> <!-- ROLE_MEMBER 라는 권한이 있는 사용자만 접근 가능 -->
        <security:intercept-url pattern="/auth/admin" access="hasRole('ROLE_ADMIN')" />

<!--        <security:access-denied-handler error-page="/accessError" />-->
        <security:access-denied-handler ref="customAccessDenied" />

        <security:form-login login-page="/customLogin" />
        <security:logout logout-url="/customLogout" invalidate-session="true"
        delete-cookies="remember-me, JSESSION_ID"/>

        <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />
    </security:http>
    <security:authentication-manager>

        <security:authentication-provider user-service-ref="customUserDetailsService">
<!--            <security:jdbc-userVO-service data-source-ref="dataSource"-->
<!--            users-by-username-query="SELECT userid, userpw, enabled FROM member WHERE userid=?"-->
<!--            authorities-by-username-query="SELECT userid, auth FROM member_auth WHERE userid=?"/>-->
            <security:password-encoder ref="bcryptPasswordEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>

</beans>
