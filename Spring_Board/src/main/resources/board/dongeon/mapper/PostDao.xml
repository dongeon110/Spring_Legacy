<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board.dongeon.mapper.PostDao">

    <resultMap type="postVO" id="postVOResultMap">
        <id column="PNO" property="postNo"/>
        <result column="PSUBJECT" property="postSubject"/>
        <result column="PTEXT" property="postText"/>
        <result column="POSTERNAME" property="posterName"/>
        <result column="CRE_DATE" property="postCreatedDate" javaType="java.sql.Timestamp"/>
        <result column="MOD_DATE" property="postUpdateDate" javaType="java.sql.Timestamp"/>
        <result column="PVIEWS" property="postViews"/>
        <result column="ROWNUM" property="rowNum"/>
        <result column="REGROUP" property="regroup"/>
        <result column="REDEPTH" property="redepth"/>
        <result column="REORDER" property="reorder"/>
        <result column="ENABLED" property="enabled"/>
        <result column="CNTREPLY" property="cntReply"/>
        <result column="REPARENT" property="reparent"/>
    </resultMap>

    <sql id="searchinfo">
        <trim prefix="(" suffix=") AND" prefixOverrides="OR">
            <foreach item="type" collection="typeArr">
                <choose>
                    <when test="type == 'S'.toString()">
                        psubject LIKE '%'||#{keyword}||'%'
                    </when>
                    <when test="type == 'T'.toString()">
                        ptext LIKE '%'||#{keyword}||'%'
                    </when>
                    <when test="type == 'P'.toString()">
                        postername LIKE '%'||#{keyword}||'%'
                    </when>
                </choose>
            </foreach>
        </trim>
    </sql>

    <sql id="isdeleted">
        SELECT PNO, PSUBJECT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED FROM board WHERE pno IN
            (
              WITH RECURSIVE search_bom(pno, regroup, LEVEL, reorder, reparent, enabled, path, cycle) AS (
                  SELECT aa.pno, aa.regroup, 0, aa.reorder, aa.reparent, aa.enabled, ARRAY[aa.pno], false
                  FROM board aa
                  WHERE aa.reparent IS NULL
                  UNION ALL
                  SELECT aa.pno, aa.regroup, LEVEL +1, aa.reorder, aa.reparent, aa.enabled, path||aa.pno, aa.pno = ANY(path)
                  FROM board aa, search_bom sb
                  WHERE aa.reparent = sb.pno AND NOT CYCLE
              ),
                 sub1(pno) AS ( -- All
                     SELECT pno, reparent, regroup, LEVEL, reorder, enabled, path, path[1:LEVEL] AS path2
                     FROM search_bom
                 ),
                 sub2(pno) AS ( -- enabled True
                     SELECT pno, reparent, regroup, LEVEL, reorder, enabled, path, path[1:LEVEL] AS path2
                     FROM search_bom
                     WHERE enabled='T'
                 )
              SELECT distinct sub1.pno
              FROM sub1
                       LEFT JOIN sub2 ON sub1.pno = ANY(sub2.path2)
              WHERE sub1.enabled='F' AND sub2.path2 IS NOT NULL)
    </sql>

    <sql id="isdeletedwithoutsearch">
        <foreach item="type" collection="typeArr">
            <choose>
                <when test="type == 'S'.toString()"></when>
                <when test="type == 'T'.toString()"></when>
                <when test="type == 'P'.toString()"></when>
                <otherwise>
                    UNION ALL
                    <include refid="isdeleted"></include>
                </otherwise>
            </choose>
        </foreach>
        <if test="type == null">
            UNION ALL
            <include refid="isdeleted"></include>
        </if>
    </sql>

    <select id="searchList" parameterType="map" resultMap="postVOResultMap">
        SELECT (ROW_NUMBER() OVER()) AS ROWNUM, PNO, PSUBJECT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED, CNTREPLY
        FROM
            (SELECT (ROW_NUMBER() OVER()) AS ROWNUM, PNO, PSUBJECT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED, CNTREPLY
            FROM
                ( -- Paging 처리하기 위한 ROWNUM 추가
                    SELECT (ROW_NUMBER() OVER()) AS rn, PNO, PSUBJECT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED
                    FROM
                        (   -- 검색어 조건 조회 서브쿼리
                            SELECT PNO, PSUBJECT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED
                            FROM BOARD
                            WHERE
                                <include refid="searchinfo"></include>
                                ENABLED='T'
                                <include refid="isdeletedwithoutsearch"></include>

                            ORDER BY regroup DESC, reorder ASC
                        ) AS SEARCHBOARD
                ) AS ORDERBOARD
                LEFT JOIN
                    (SELECT PNO AS PNO2, COUNT(*) AS CNTREPLY FROM REPLY GROUP BY PNO2) AS JOINBOARD
                    ON PNO = PNO2
            -- Paging
            <![CDATA[
            WHERE rn > (#{pageNum}-1)*#{amount} AND rn <= #{pageNum}*#{amount}
            ]]>
            ORDER BY regroup DESC, reorder ASC) AS REORDERBOARD
    </select>

<!--    <select id="searchList" parameterType="map" resultMap="postVOResultMap">-->
<!--        SELECT (ROW_NUMBER() OVER()) AS ROWNUM, PNO, PSUBJECT, POSTERNAME, CRE_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED, CNTREPLY-->
<!--        FROM-->
<!--        (SELECT (ROW_NUMBER() OVER()) AS ROWNUM, PNO, PSUBJECT, POSTERNAME, CRE_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED, CNTREPLY-->
<!--        FROM-->
<!--        ( &#45;&#45; Paging 처리하기 위한 ROWNUM 추가-->
<!--        SELECT (ROW_NUMBER() OVER()) AS rn, PNO, PSUBJECT, POSTERNAME, CRE_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED-->
<!--        FROM-->
<!--        (   &#45;&#45; 검색어 조건 조회 서브쿼리-->
<!--        SELECT PNO, PSUBJECT, POSTERNAME, CRE_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED-->
<!--        FROM BOARD-->
<!--        WHERE-->
<!--        <include refid="searchinfo"></include>-->
<!--        ENABLED='T'-->
<!--        ORDER BY regroup DESC, reorder ASC-->
<!--        ) AS SEARCHBOARD-->
<!--        ) AS ORDERBOARD-->
<!--        LEFT JOIN-->
<!--        (SELECT PNO AS PNO2, COUNT(*) AS CNTREPLY FROM REPLY GROUP BY PNO2) AS JOINBOARD-->
<!--        ON PNO = PNO2-->
<!--        &#45;&#45; Paging-->
<!--        <![CDATA[-->
<!--            WHERE rn > (#{pageNum}-1)*#{amount} AND rn <= #{pageNum}*#{amount}-->
<!--            ]]>-->
<!--        ORDER BY regroup DESC, reorder ASC) AS REORDERBOARD-->
<!--    </select>-->


    <select id="adminSearchList" parameterType="map" resultMap="postVOResultMap">

        SELECT (ROW_NUMBER() OVER()) AS ROWNUM, PNO, PSUBJECT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED, CNTREPLY
        FROM
            (SELECT (ROW_NUMBER() OVER()) AS ROWNUM, PNO, PSUBJECT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED, CNTREPLY
            FROM
                ( -- Paging 처리하기 위한 ROWNUM 추가
                SELECT (ROW_NUMBER() OVER()) AS rn, PNO, PSUBJECT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED
                FROM
                    (   -- 검색어 조건 조회 서브쿼리
                    SELECT PNO, PSUBJECT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED
                    FROM BOARD
                    WHERE
                        <include refid="searchinfo"></include>
        <![CDATA[
                        PNO > 0
                    ORDER BY regroup DESC, reorder ASC
                    ) AS SEARCHBOARD
                ) AS ORDERBOARD
                LEFT JOIN
                    (SELECT PNO AS PNO2, COUNT(*) AS CNTREPLY FROM REPLY GROUP BY PNO2) AS JOINBOARD
                ON PNO = PNO2
            -- Paging
            WHERE rn > (#{pageNum}-1)*#{amount} AND rn <= #{pageNum}*#{amount}
        ORDER BY regroup DESC, reorder ASC) AS REORDERBOARD
        ]]>
    </select>





    <insert id="insert" parameterType="postVO">
        INSERT INTO board(PSUBJECT, PTEXT, POSTERNAME, CRE_DATE, MOD_DATE)
        VALUES (#{postSubject}, #{postText}, #{posterName}, NOW(), NOW())
    </insert>



    <select id="selectOne" parameterType="int" resultMap="postVOResultMap">
        SELECT PNO, PSUBJECT, PTEXT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED
        FROM BOARD
        WHERE PNO=#{postNo}
    </select>

<!--    <select id="checkPw" parameterType="postVO" resultType="int">-->
<!--        SELECT count(*) FROM BOARD-->
<!--        WHERE PNO=#{postNo} and PPWD=#{postPassword}-->
<!--    </select>-->

    <update id="update" parameterType="postVO">
        UPDATE BOARD SET
                         PSUBJECT = #{postSubject},
                         PTEXT = #{postText},
                         POSTERNAME = #{posterName},
                         MOD_DATE = now()
        WHERE PNO = #{postNo} AND ENABLED='T'
    </update>



    <update id="delete" parameterType="int">
        UPDATE BOARD SET ENABLED='F' WHERE PNO=#{postNo}
    </update>

    <update id="restorePost" parameterType="int">
        UPDATE BOARD SET ENABLED='T' WHERE PNO=#{postNo}
    </update>

    <insert id="insertRepost" parameterType="postVO">
        BEGIN;
            UPDATE board SET REORDER = REORDER+1 WHERE REGROUP=#{regroup} AND REORDER >= #{reorder};
            INSERT INTO BOARD(PSUBJECT, PTEXT, POSTERNAME, CRE_DATE, MOD_DATE, REGROUP, REDEPTH, REORDER, REPARENT)
            VALUES
                (#{postSubject}, #{postText}, #{posterName},
                 NOW(), NOW(), #{regroup}, #{redepth}, #{reorder}, #{reparent});
        END;
    </insert>

    <update id="increaseViews" parameterType="int">
        UPDATE BOARD SET PVIEWS = PVIEWS + 1 WHERE PNO = #{postNo} AND ENABLED = 'T'
    </update>

    <select id="getTotalCount" resultType="int">
    SELECT count(*) FROM
        (SELECT PNO, PSUBJECT, POSTERNAME, CRE_DATE, MOD_DATE, PVIEWS, REGROUP, REDEPTH, REORDER, ENABLED FROM board
        WHERE
        <include refid="searchinfo"></include>
        ENABLED = 'T'
        <include refid="isdeletedwithoutsearch"></include>) AS totalcount

    </select>

    <select id="adminGetTotalCount" resultType="int">

        SELECT count(*) FROM board
        WHERE
            <include refid="searchinfo"></include>
        <![CDATA[
            PNO > 0
        ]]>
    </select>


    <select id="superisdeleted" parameterType="int" resultMap="postVOResultMap">

    </select>



</mapper>