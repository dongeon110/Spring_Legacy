<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board.dongeon.mapper.MemberDao">

    <resultMap type="memberVO" id="memberMap">
        <id property="userid" column="userid"/>
        <result property="rowNum" column="rownum"/>
        <result property="userid" column="userid"/>
        <result property="userpw" column="userpw"/>
        <result property="userName" column="username"/>
        <result property="enabled" column="enabled"/>
        <result property="regDate" column="regdate"/>
        <result property="updateDate" column="updatedate"/>
        <collection property="authList" resultMap="authMap">
        </collection>
    </resultMap>

    <resultMap type="board.dongeon.domain.vo.AuthVO" id="authMap">
        <result property="userid" column="userid"/>
        <result property="auth" column="auth"/>
    </resultMap>

    <sql id="searchinfo">
        <trim prefix="WHERE (" suffix=")" prefixOverrides="OR">
            <foreach item="type" collection="typeArr">
                <choose>
                    <when test="type == 'I'.toString()">
                        userid LIKE '%'||#{keyword}||'%'
                    </when>
                    <when test="type == 'N'.toString()">
                        username LIKE '%'||#{keyword}||'%'
                    </when>
                </choose>
            </foreach>
        </trim>
    </sql>

    <select id="read" resultMap="memberMap">
        SELECT mem.userid, userpw, username, enabled, regdate, updatedate, auth
        FROM member mem LEFT JOIN member_auth auth ON mem.userid = auth.userid
        WHERE mem.userid = #{userid}
    </select>

    <insert id="memberInsert" parameterType="memberVO">
        BEGIN;
            INSERT INTO member(userid, userpw, username)
            VALUES (#{userid}, #{userpw}, #{userName});
            INSERT INTO member_auth(userid, auth)
            VALUES (#{userid}, 'ROLE_USER');
        END;
    </insert>

    <update id="memberUpdate" parameterType="memberVO">

    </update>

    <update id="memberDelete">
        UPDATE member SET enabled='F' WHERE userid=#{userid}
    </update>

    <select id="isDuplicated" resultType="int">
        SELECT count(*) FROM member WHERE userid=#{userid}
    </select>

    <select id="getMemberList" parameterType="map" resultMap="memberMap">
        SELECT (ROW_NUMBER() OVER()) AS ROWNUM, userid, username, regdate, enabled
        FROM
        (
            SELECT userid, username, regdate, enabled
            FROM
            (
                SELECT (ROW_NUMBER() OVER()) AS rn, userid, username, regdate, enabled
                FROM
                (
                    SELECT userid, username, regdate, enabled
                    FROM member
                    <include refid="searchinfo"></include>
                    ORDER BY regdate DESC
                    ) AS searchtable
                ) AS rntable
            <![CDATA[
            WHERE rn > (#{pageNum}-1)*#{amount} AND rn <= #{pageNum}*#{amount}
            ]]>
        ) AS pagetable

    </select>

    <select id="getTotal" resultType="int">
        SELECT count(*) FROM member
        <include refid="searchinfo"></include>
    </select>

    <update id="memberAuthAdd" parameterType="map">
        INSERT INTO member_auth(userid, auth) VALUES (#{userid}, #{auth})
    </update>

    <delete id="memberAuthDelete" parameterType="map">
        DELETE FROM member_auth WHERE userid=#{userid} AND auth=#{auth}
    </delete>
</mapper>